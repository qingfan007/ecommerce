<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

    <!-- 公共属性 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{40} - %msg%n"/>
    <property name="LOG_PATH" value="logs"/>

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- MySQL 专属日志 -->
    <appender name="MYSQL_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/mysql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/mysql.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[MySQL] ${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- PostgreSQL 专属日志 -->
    <appender name="POSTGRES_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/postgres.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/postgres.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[PostgreSQL] ${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 慢查询日志（>500ms） -->
    <appender name="SLOW_SQL_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/slow-sql.log</file>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
                <expression>
                    (message.contains("executionTime") &&
                    Integer.parseInt(message.split("executionTime=")[1].split("ms")[0].trim()) > 500)
                    ||
                    (message.matches(".*executed in \\d+ ms.*") &&
                    Integer.parseInt(message.replaceAll(".*executed in (\\d+) ms.*", "$1")) > 500)
                </expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>[SLOW SQL] ${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 数据源连接监控 -->
    <appender name="CONNECTION_MONITOR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/connection-monitor.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>[CONNECTION] ${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 多数据源日志分配 -->
    <logger name="com.mysql.cj" level="DEBUG" additivity="false">
        <appender-ref ref="MYSQL_LOG"/>
        <appender-ref ref="SLOW_SQL_LOG"/>
    </logger>

    <logger name="org.postgresql" level="DEBUG" additivity="false">
        <appender-ref ref="POSTGRES_LOG"/>
        <appender-ref ref="SLOW_SQL_LOG"/>
    </logger>

    <!-- HikariCP 连接池监控 -->
    <logger name="com.zaxxer.hikari" level="INFO" additivity="false">
        <appender-ref ref="CONNECTION_MONITOR"/>
    </logger>

    <!-- 生产环境降级 -->
    <springProfile name="prod">
        <logger name="com.mysql.cj" level="WARN"/>
        <logger name="org.postgresql" level="WARN"/>
        <logger name="org.hibernate.SQL" level="WARN"/>
    </springProfile>

    <!-- 开发环境增强 -->
    <springProfile name="dev">
        <logger name="org.hibernate.SQL" level="DEBUG"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    </springProfile>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
    </root>
</configuration>